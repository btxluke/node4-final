{
  "active": true,
  "connections": {
    "Postgres1": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Postgres15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres15": {
      "main": [
        [
          {
            "node": "globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "globals": {
      "main": [
        [
          {
            "node": "Postgres1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SSH": {
      "main": [
        [
          {
            "node": "firstFail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SSH2": {
      "main": [
        [
          {
            "node": "SSH",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "SSH2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF": {
      "main": [
        [
          {
            "node": "SSH1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SSH1": {
      "main": [
        [
          {
            "node": "SSH3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SSH3": {
      "main": [
        [
          {
            "node": "SSH4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SSH4": {
      "main": [
        [
          {
            "node": "IF3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SSH1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set": {
      "main": [
        [
          {
            "node": "IF1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "IF2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Spreadsheet File": {
      "main": [
        [
          {
            "node": "Send Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF2": {
      "main": [
        [
          {
            "node": "Spreadsheet File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Postgres2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "firstFail": {
      "main": [
        [
          {
            "node": "IF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF3": {
      "main": [
        [
          {
            "node": "SSH5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SSH5": {
      "main": [
        [
          {
            "node": "Set",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Email": {
      "main": [
        [
          {
            "node": "Postgres2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres2": {
      "main": [
        [
          {
            "node": "Postgres3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres3": {
      "main": [
        [
          {
            "node": "Postgres4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres4": {
      "main": [
        [
          {
            "node": "Postgres6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres6": {
      "main": [
        [
          {
            "node": "Postgres7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres7": {
      "main": [
        [
          {
            "node": "Postgres9",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres9": {
      "main": [
        [
          {
            "node": "Postgres10",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres10": {
      "main": [
        [
          {
            "node": "Postgres11",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres11": {
      "main": [
        [
          {
            "node": "Postgres12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres12": {
      "main": [
        [
          {
            "node": "Postgres13",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres13": {
      "main": [
        [
          {
            "node": "Postgres14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres14": {
      "main": [
        [
          {
            "node": "Postgres16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set1": {
      "main": [
        [
          {
            "node": "Data Update: Process Alter Statements",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres16": {
      "main": [
        [
          {
            "node": "Set1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Amend Expected Lines": {
      "main": [
        [
          {
            "node": "Postgres18",
            "type": "main",
            "index": 0
          },
          {
            "node": "Postgres17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set2": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Set3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set3": {
      "main": [
        [
          {
            "node": "Postgres19",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres17": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Postgres18": {
      "main": [
        [
          {
            "node": "Set2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Data Update: Process Alter Statements": {
      "main": [
        [
          {
            "node": "Amend Expected Lines",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2023-08-25T11:25:27.380Z",
  "id": "dBH5XzEWae6xMCMQ",
  "name": "Data Update: Zyro: Prep",
  "nodes": [
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "DROP TABLE IF EXISTS odoodata.upload_zyro; ",
        "options": {}
      },
      "id": "7db77692-e228-4511-9319-f2573d4a0794",
      "name": "Postgres1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        -620,
        380
      ],
      "credentials": {
        "postgres": {
          "id": "dqel3RyoT6NsGiSw",
          "name": "odooData"
        }
      }
    },
    {
      "parameters": {
        "path": "zyro-prep",
        "responseMode": "lastNode",
        "options": {}
      },
      "id": "4f21bd70-151a-454a-99e7-d7f05ffa2a3d",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -900,
        380
      ],
      "webhookId": "7db6b96c-52cf-45de-8967-e7dbe741afa0"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT * FROM odoodata.map_supplierinfo WHERE Name = 'Zyro';",
        "options": {}
      },
      "id": "83540616-c533-4214-9e86-8f7e5b99a8f9",
      "name": "Postgres15",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        -900,
        120
      ],
      "credentials": {
        "postgres": {
          "id": "dqel3RyoT6NsGiSw",
          "name": "odooData"
        }
      }
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "globals",
              "value": "={{ JSON.parse($json.globals)[0] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "ae0e7095-2708-4ce5-932d-d5345a2e0e6e",
      "name": "globals",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        -740,
        120
      ]
    },
    {
      "parameters": {
        "command": "=psql -d btxPIM -c \"\\\\COPY odoodata.upload_zyro FROM /home/luke/feeds/Upload-Zyro.csv DELIMITER ',' CSV HEADER;\"",
        "cwd": "/home/luke/feeds/"
      },
      "id": "814cd808-9f2b-49f0-8f15-e06e08250b52",
      "name": "SSH",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        -60,
        380
      ],
      "credentials": {
        "sshPassword": {
          "id": "BS6BQiriQnV3fLKC",
          "name": "node3 (luke)"
        }
      }
    },
    {
      "parameters": {
        "command": "=LANG=C sed -i 's/[\\d128-\\d255]//g' /home/luke/feeds/Upload-Zyro.csv",
        "cwd": "/home/luke/feeds/"
      },
      "id": "74ff7de9-0388-4297-9308-6787c5908b93",
      "name": "SSH2",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        -240,
        380
      ],
      "credentials": {
        "sshPassword": {
          "id": "BS6BQiriQnV3fLKC",
          "name": "node3 (luke)"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "CREATE TABLE odoodata.upload_zyro AS\n  SELECT *\nFROM odoodata.template_zyro;",
        "options": {}
      },
      "id": "1b3308b9-25f4-42fa-8739-91dbde936da4",
      "name": "Postgres",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        -400,
        380
      ],
      "credentials": {
        "postgres": {
          "id": "dqel3RyoT6NsGiSw",
          "name": "odooData"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.stderr }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "98f85bb8-f2c0-4d33-868c-062c77341bbf",
      "name": "IF",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        520,
        380
      ]
    },
    {
      "parameters": {
        "fromEmail": "info@biketrax.co.uk",
        "toEmail": "ithelpdesk@madison.co.uk",
        "subject": "=Madison Feed Error - {{ ($('Code').all().length / $('globals').first().json.globals.LastCount) < 0.05 ? 100-((Math.round(($('Code').all().length / $('globals').first().json.globals.LastCount)*10000))/100) + \"% Parsed\" : \"Feed Rejected\" }}",
        "text": "=Line(s) from the latest Madison data feed have failed to parse. This is usually because of a break in CSV specifications or incorrect placement of standard delimiters (,) / enclosing marks (\")  in your feed CSV.\n\nHere is an example product code with faulty data, and the error it caused:\n\nProduct Code: {{ $('Code').first().json.failed_code }}\n{{ $('Code').first().json.stderr }}\n\nA list of errors is attached as a XLS file - this represents {{ ($('Code').all().length / $('globals').first().json.globals.LastCount) < 0.05 ? Math.round(($('Code').all().length / $('globals').first().json.globals.LastCount)*10000)/100 + \"% of your feed, so the remainder has been parsed\" : \"more than 5% of your feed, so the entire feed has been rejected\" }}. If you could correct the errors for future exports, then then the item(s) can be added to our database on the next run. Our data routines run daily, but this email will be sent a maximum of once a week, if you would prefer to recieve it more frequently (or as soon as errors emerge), please email luke@biketrax.co.uk.\n\nMany thanks,\n\nBiketraxBot (Product Information Database)",
        "options": {
          "attachments": "data",
          "ccEmail": "luke@biketrax.co.uk",
          "replyTo": "luke@biketrax.co.uk"
        }
      },
      "id": "836d8e81-a843-45ae-b272-88834806249f",
      "name": "Send Email",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        2600,
        460
      ],
      "executeOnce": true,
      "credentials": {
        "smtp": {
          "id": "H2cITTqls0BiVgFE",
          "name": "info@biketrax.co.uk"
        }
      }
    },
    {
      "parameters": {
        "command": "=grep -n {{ \"\\\"\"+$json.stderr.split(\"\\\"\")[2]+\"\\\"\" }}  /home/luke/feeds/Upload-Madison{{ $runIndex == 0 ? \"\" : $runIndex }}.csv | cut -f1 -d:"
      },
      "id": "be073a59-9211-4821-84c8-16c4f6b2955c",
      "name": "SSH1",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        720,
        260
      ],
      "credentials": {
        "sshPassword": {
          "id": "AGAk5dnezH3Jdg8v",
          "name": "Node3 (postgres)"
        }
      }
    },
    {
      "parameters": {
        "command": "={{\"sed '\"+$json.stdout+\"d'\"}} /home/luke/feeds/Upload-Madison{{ $runIndex == 0 ? \"\" : $runIndex }}.csv > /home/luke/feeds/Upload-Madison{{ $runIndex+1 }}.csv"
      },
      "id": "0677dd03-e93b-4e0a-98c2-bbf0206fbb48",
      "name": "SSH3",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        940,
        260
      ],
      "credentials": {
        "sshPassword": {
          "id": "BS6BQiriQnV3fLKC",
          "name": "node3 (luke)"
        }
      }
    },
    {
      "parameters": {
        "command": "=psql -d btxPIM -c \"\\\\COPY odoodata.upload_madison FROM /home/luke/feeds/Upload-Madison{{ $runIndex+1 }}.csv DELIMITER ',' CSV HEADER;\"",
        "cwd": "/home/luke/feeds/"
      },
      "id": "495f2a12-d092-49ce-b885-b50a04d2fabf",
      "name": "SSH4",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        1140,
        260
      ],
      "credentials": {
        "sshPassword": {
          "id": "AGAk5dnezH3Jdg8v",
          "name": "Node3 (postgres)"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.stderr }}",
              "operation": "isEmpty"
            }
          ],
          "number": [
            {
              "value1": "={{ $runIndex }}",
              "operation": "largerEqual",
              "value2": "={{ Number($('globals').first().json.globals.LastCount)*0.05 }}"
            }
          ]
        },
        "combineOperation": "any"
      },
      "id": "bb954ef7-fed8-4584-8563-9519ea03e3e6",
      "name": "IF1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1520,
        0
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "failed_code",
              "value": "={{$('SSH4').item.json.stderr.split(\"\\\"\")[2]}}"
            },
            {
              "name": "stderr",
              "value": "={{ $('SSH4').item.json.stderr }}"
            }
          ]
        },
        "options": {}
      },
      "id": "d6ddb36a-ad02-4dd7-9879-8f413b1464d2",
      "name": "Set",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        1340,
        260
      ]
    },
    {
      "parameters": {
        "jsCode": "let results = [],\n  i = 0;\n\ndo {\n  try {\n    results = results.concat($(\"Set\").all(0, i));\n  } catch (error) {\n        results = results.concat($(\"firstFail\").all()); \n    return results;\n  }\n  i++;\n} while (true);\n"
      },
      "id": "3974eaf0-66ad-46a9-84e2-5febf3c602b9",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1760,
        460
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "operation": "toFile",
        "options": {
          "fileName": "parsing_errors.xls",
          "headerRow": true
        }
      },
      "id": "57775cb8-0edc-4a5d-9f9d-44906396ba6d",
      "name": "Spreadsheet File",
      "type": "n8n-nodes-base.spreadsheetFile",
      "typeVersion": 1,
      "position": [
        2420,
        460
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $today.weekday }}",
              "operation": "equal",
              "value2": 1
            }
          ]
        }
      },
      "id": "844123f8-9fd5-4cf2-b29d-bdedde35ba22",
      "name": "IF2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1980,
        460
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "failed_code",
              "value": "={{$json.stderr.split(\"\\\"\")[2]}}"
            },
            {
              "name": "stderr",
              "value": "={{ $json.stderr }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b2b035db-80d8-4d5c-bb05-1d05fdbd9fae",
      "name": "firstFail",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        300,
        380
      ]
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $runIndex }}",
              "operation": "larger"
            }
          ]
        }
      },
      "id": "7e14c95d-7d48-4ee2-9db6-80ffb0fc05c9",
      "name": "IF3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        940,
        480
      ]
    },
    {
      "parameters": {
        "command": "=rm /home/luke/feeds/Upload-Madison{{ $runIndex }}.csv",
        "cwd": "/home/luke/feeds/"
      },
      "id": "af213493-95ac-4d70-b764-f16a026019d1",
      "name": "SSH5",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        1140,
        480
      ],
      "credentials": {
        "sshPassword": {
          "id": "BS6BQiriQnV3fLKC",
          "name": "node3 (luke)"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "ALTER TABLE odoodata.upload_zyro \nADD COLUMN IF NOT EXISTS vat INT NOT NULL DEFAULT 0;",
        "options": {}
      },
      "id": "0dbda3a4-a40b-4188-a043-99fb0af921cc",
      "name": "Postgres2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        -60,
        860
      ],
      "credentials": {
        "postgres": {
          "id": "dqel3RyoT6NsGiSw",
          "name": "odooData"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE odoodata.upload_zyro \nSET vat = 20 WHERE vatcode = 'N';",
        "options": {}
      },
      "id": "bba7171f-c027-4f24-a2fe-d7a83c8adf63",
      "name": "Postgres3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        120,
        860
      ],
      "credentials": {
        "postgres": {
          "id": "dqel3RyoT6NsGiSw",
          "name": "odooData"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE odoodata.upload_zyro SET srp = srp::NUMERIC / (1+(vat::numeric/100));",
        "options": {}
      },
      "id": "0b9c6f17-1cfb-418f-a325-a4a72e7109b5",
      "name": "Postgres4",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        300,
        860
      ],
      "credentials": {
        "postgres": {
          "id": "dqel3RyoT6NsGiSw",
          "name": "odooData"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "ALTER TABLE odoodata.upload_zyro \nADD COLUMN yourprice DECIMAL(7,2) NULL",
        "options": {}
      },
      "id": "039e07ac-48bc-4bbc-97e0-6ccc1fe56334",
      "name": "Postgres6",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        480,
        860
      ],
      "credentials": {
        "postgres": {
          "id": "dqel3RyoT6NsGiSw",
          "name": "odooData"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE odoodata.upload_zyro a\nSET yourprice = b.price1\nFROM odoodata.csp_zyro b\nWHERE a.sku = b.productcode;",
        "options": {}
      },
      "id": "16367a7a-c02c-4eca-8362-63d65e5f0f0a",
      "name": "Postgres7",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        680,
        860
      ],
      "credentials": {
        "postgres": {
          "id": "dqel3RyoT6NsGiSw",
          "name": "odooData"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE odoodata.upload_zyro\nSET \nyourprice = orangeprice\nWHERE yourprice IS NULL",
        "options": {}
      },
      "id": "0d5fbfa0-315e-4c7b-ac08-49a8bbee4d45",
      "name": "Postgres9",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        860,
        860
      ],
      "credentials": {
        "postgres": {
          "id": "dqel3RyoT6NsGiSw",
          "name": "odooData"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE odoodata.upload_zyro b\nSET\nstockindicator = c.stockindicator,\nstockduein = c.stockduein\nFROM odoodata.stock_zyro c \nWHERE b.sku = c.sku;\n",
        "options": {}
      },
      "id": "72d431ba-0e77-4460-876b-ed5d434a11d6",
      "name": "Postgres10",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        1040,
        860
      ],
      "credentials": {
        "postgres": {
          "id": "dqel3RyoT6NsGiSw",
          "name": "odooData"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "ALTER TABLE odoodata.upload_zyro ADD COLUMN leadtime INT DEFAULT 0;",
        "options": {}
      },
      "id": "6bed2f25-631a-4d9e-ba8a-c7bc6b67e24c",
      "name": "Postgres11",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        1220,
        860
      ],
      "credentials": {
        "postgres": {
          "id": "dqel3RyoT6NsGiSw",
          "name": "odooData"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE odoodata.upload_zyro \nSET\nleadtime = TO_DATE(stockduein,'DD/MM/YYYY')-CURRENT_DATE\nWHERE stockindicator = 'OOS'\n",
        "options": {}
      },
      "id": "30af2d0f-0bd5-4376-802a-eb22aeed3b8a",
      "name": "Postgres12",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        1400,
        860
      ],
      "credentials": {
        "postgres": {
          "id": "dqel3RyoT6NsGiSw",
          "name": "odooData"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "ALTER TABLE odoodata.upload_zyro ADD COLUMN stockcount INT DEFAULT 0;",
        "options": {}
      },
      "id": "07602f34-fb50-4dfb-9b37-dc39f224e5ec",
      "name": "Postgres13",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        1560,
        860
      ],
      "credentials": {
        "postgres": {
          "id": "dqel3RyoT6NsGiSw",
          "name": "odooData"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE odoodata.upload_zyro \nSET\nstockcount = 1\nWHERE stockindicator = 'IS'\n",
        "options": {}
      },
      "id": "d49519eb-182c-4f7e-b013-c8b622e0f08c",
      "name": "Postgres14",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        1720,
        860
      ],
      "credentials": {
        "postgres": {
          "id": "dqel3RyoT6NsGiSw",
          "name": "odooData"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE odoodata.upload_zyro \nSET \n\"name\" = INITCAP(\"name\"),\nbriefdescription = INITCAP(briefdescription)\n",
        "options": {}
      },
      "id": "e64abc98-5012-4be9-9ce8-a4df1903a33a",
      "name": "Postgres16",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        1880,
        860
      ],
      "credentials": {
        "postgres": {
          "id": "dqel3RyoT6NsGiSw",
          "name": "odooData"
        }
      }
    },
    {
      "parameters": {
        "workflowId": "Vc6ZgR8vArPNZu09"
      },
      "id": "da60ee47-5874-4923-8054-04e2bd4bc027",
      "name": "Data Update: Process Alter Statements",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        100,
        1180
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "alterStatements",
              "value": "RENAME COLUMN \"sku\" TO \"productcode\", RENAME COLUMN \"name\" TO \"productname\", RENAME COLUMN \"upc\" TO \"ean\", RENAME COLUMN \"srp\" TO \"rrp\", RENAME COLUMN \"boxquantity\" TO \"packqty\", RENAME COLUMN \"stylecode\" TO \"variantgrouping\",  RENAME COLUMN \"briefdescription\" TO \"shortdescription\", RENAME COLUMN \"productcategory\" TO \"subcategory\", ADD COLUMN \"AlternativeImage1Url\" VARCHAR(80) NULL DEFAULT NULL, ADD COLUMN \"AlternativeImage2Url\" TEXT NULL DEFAULT NULL , ADD COLUMN \"AlternativeImage3Url\" TEXT NULL DEFAULT NULL , ADD COLUMN \"Weight\" VARCHAR(20) DEFAULT 0.5 NOT NULL, ADD COLUMN \"Keywords\" VARCHAR(1000) NULL DEFAULT NULL, ADD COLUMN \"TechnicalSpec\" TEXT DEFAULT NULL, ADD COLUMN \"TechnicalSpecLabel\" TEXT DEFAULT NULL"
            },
            {
              "name": "supplier",
              "value": "Zyro"
            }
          ]
        },
        "options": {}
      },
      "id": "8cabeab0-9c12-48c7-b158-2af0b549bbc1",
      "name": "Set1",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        -60,
        1180
      ]
    },
    {
      "parameters": {},
      "id": "8b527ff5-9105-4090-9330-97a9a553a4d6",
      "name": "Amend Expected Lines",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        300,
        1180
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "globals",
              "value": "={{ JSON.parse($json.globals)[0] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "cb4306b9-7f8b-4dba-907b-aaaea14555bc",
      "name": "Set2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        700,
        1060
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "3de94439-6cfc-4ffa-8afb-a2c12c56a022",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        920,
        1180
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "globals.LastCount",
              "value": "={{ $json.count }}"
            }
          ]
        },
        "options": {}
      },
      "id": "ebab4d0d-9189-40e4-93d2-924e788e73a9",
      "name": "Set3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        1140,
        1180
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT COUNT (productcode) FROM odoodata.upload_zyro;",
        "options": {}
      },
      "id": "ccef873e-c324-4369-b30b-dac6c2654618",
      "name": "Postgres17",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        700,
        1280
      ],
      "credentials": {
        "postgres": {
          "id": "dqel3RyoT6NsGiSw",
          "name": "odooData"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT * FROM odoodata.map_supplierinfo WHERE Name = 'Zyro';",
        "options": {}
      },
      "id": "10b106a8-af7e-4fc1-8f2d-21e81be961f1",
      "name": "Postgres18",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        480,
        1060
      ],
      "credentials": {
        "postgres": {
          "id": "dqel3RyoT6NsGiSw",
          "name": "odooData"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE odoodata.map_supplierinfo SET globals = {{ \"'[\" + JSON.stringify($json.globals) + \"]'\" }} WHERE \"name\" = {{ \"'\"+$json.name+\"'\" }}; ",
        "options": {}
      },
      "id": "4db08260-a8ce-4f03-bae7-f766d09ab426",
      "name": "Postgres19",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        1360,
        1180
      ],
      "credentials": {
        "postgres": {
          "id": "dqel3RyoT6NsGiSw",
          "name": "odooData"
        }
      }
    }
  ],
  "pinData": {
    "Webhook": [
      {
        "json": {
          "headers": {
            "host": "node4.biketrax.co.uk",
            "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/116.0.0.0 Safari/537.36",
            "accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7",
            "accept-encoding": "gzip, deflate, br",
            "accept-language": "en-GB,en-US;q=0.9,en;q=0.8",
            "cache-control": "max-age=0",
            "cookie": "rl_page_init_referrer=RudderEncrypt%3AU2FsdGVkX1%2Bg%2FR%2BDoyn7CGTlRw1Z6%2Fb%2B2XCNN67Jh2o%3D; rl_page_init_referring_domain=RudderEncrypt%3AU2FsdGVkX18uU5MJnfgfy%2FRUMU1I8pymRwiN6gsci6M%3D; n8n-auth=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6ImU1NGU2NmU4LTA0YzYtNGZhZi1iZTdjLWMyNDIwYzY2NGU3NCIsImVtYWlsIjoibHVrZUBiaWtldHJheC5jby51ayIsInBhc3N3b3JkIjoiOTRkYjE5YmM3MjMxNDgxODQ3MDRjMmYxZGZkYjlmYjAzNDQxMjM0MjcwMThhODllNGQ5ODQ4NWM2MzUyOGQ0ZSIsImlhdCI6MTY5Mjk0OTA2NSwiZXhwIjoxNjkzNTUzODY1fQ.WiT6X1yWXVb-R2XiHg1f5Fe2g98j-Y0JAVhR15hUcB4; rl_anonymous_id=RudderEncrypt%3AU2FsdGVkX1%2BW3%2BcbxehhYrfHyvfQCUX3CDsBshGz2fld0f88QUgWeEK70Do83sVxBEXShGlP8%2FuzAKXw9vsCFA%3D%3D; rl_group_id=RudderEncrypt%3AU2FsdGVkX19sETf2WXTyAHC54lBwjTPY1JRyJ%2FpiIh4%3D; rl_group_trait=RudderEncrypt%3AU2FsdGVkX1%2B%2BmOfYbm3JkRG9bnPJ7sbE%2FXxijKrf9Ns%3D; rl_user_id=RudderEncrypt%3AU2FsdGVkX1%2FK%2FI80mcfq52HpRSuiXE7v11aMQV0yr%2FNatV0NgPtLlg3ocOL7YH6qm9BZS1MOtW3ncBrfqTuMaNn6uYSwWeiXzzeVOyMOcptqhHTNV7gP69tEda2niyriLU42m2xYh8ekbM8S4hsPSKDAOIhd3lqlUDzbjGkXorA%3D; rl_trait=RudderEncrypt%3AU2FsdGVkX19d8HuRS%2BMrddiC89wqxT2EJtYO0hQnqtw84%2B%2FiqPylfA4w%2Fi27qBdTfkcQR4%2BvXflvotuUowmg6Zgv1kQHs6cgxutYaImgzOZGM5zIc8M3UFsGjXaiTr2fq7WYxQ2tjibZ1J9EStkcrXoRbA9ov%2BD5X9rg2Q6Ix74%3D; ph_phc_4URIAm1uYfJO7j8kWSe0J8lc8IqnstRLS7Jx8NcakHo_posthog=%7B%22%24active_feature_flags%22%3A%5B%22013_distribution_test%22%2C%22011_ask_AI%22%2C%22012_signup_cta_wording%22%2C%22009_choosing_trial_plan%22%2C%22006_cloud_opt_in%22%2C%22010_relevant_usecase%22%2C%22schema-view%22%5D%2C%22%24enabled_feature_flags%22%3A%7B%22013_distribution_test%22%3A%22variant%22%2C%22011_ask_AI%22%3A%22gpt3%22%2C%22012_signup_cta_wording%22%3A%22variant%22%2C%22009_choosing_trial_plan%22%3A%22variant%22%2C%22004_checklist%22%3Afalse%2C%22008_template_variants%22%3Afalse%2C%22006_cloud_opt_in%22%3A%22control%22%2C%22010_relevant_usecase%22%3A%22control%22%2C%22schema-view%22%3Atrue%7D%2C%22%24feature_flag_payloads%22%3A%7B%7D%2C%22distinct_id%22%3A%22a13b88bcc4f075601cb03976e302271640b69ef501a91a6df62cec4b5d57da7c%23e54e66e8-04c6-4faf-be7c-c2420c664e74%22%2C%22%24device_id%22%3A%22018a2b9e-7557-79eb-bfa1-dace9620ffc5%22%2C%22%24user_state%22%3A%22identified%22%2C%22%24user_id%22%3A%22a13b88bcc4f075601cb03976e302271640b69ef501a91a6df62cec4b5d57da7c%23e54e66e8-04c6-4faf-be7c-c2420c664e74%22%2C%22%24stored_person_properties%22%3A%7B%22instance_id%22%3A%22a13b88bcc4f075601cb03976e302271640b69ef501a91a6df62cec4b5d57da7c%22%2C%22created_at_timestamp%22%3A1691497889718%7D%2C%22%24sesid%22%3A%5B1692971529883%2C%22018a2cf3-a84e-7001-bc90-ee04d48ef5c3%22%2C1692971280462%5D%2C%22%24session_recording_enabled_server_side%22%3Afalse%2C%22%24autocapture_disabled_server_side%22%3Afalse%7D; rl_session=RudderEncrypt%3AU2FsdGVkX19cw0AMqtgM78vmhckwXiCdm9w4viI%2FrdeTSPhWieN6jm%2BCdRWAFzOC9kiwcodjrQeEFVQSQdO%2F%2Fmauwgtm%2F2MxputHo4qJEp2cEenkZ5kZTanvy8UPHpqzN1Nt36qy4vxVrUAfePx0QQ%3D%3D",
            "if-none-match": "W/\"10-oV4hJxRVSENxc/wX8+mA4/Pe4tA\"",
            "sec-ch-ua": "\"Chromium\";v=\"116\", \"Not)A;Brand\";v=\"24\", \"Google Chrome\";v=\"116\"",
            "sec-ch-ua-mobile": "?0",
            "sec-ch-ua-platform": "\"Windows\"",
            "sec-fetch-dest": "document",
            "sec-fetch-mode": "navigate",
            "sec-fetch-site": "none",
            "sec-fetch-user": "?1",
            "upgrade-insecure-requests": "1",
            "x-forwarded-for": "195.224.58.58",
            "x-forwarded-host": "node4.biketrax.co.uk",
            "x-forwarded-proto": "https"
          },
          "params": {},
          "query": {},
          "body": {}
        }
      }
    ]
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2024-10-09T16:57:14.000Z",
  "versionId": "97dfd868-0b8b-43cd-9f33-0ec618a91b4f"
}