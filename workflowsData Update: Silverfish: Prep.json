{
  "active": true,
  "connections": {
    "IF": {
      "main": [
        [
          {
            "node": "SSH1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SSH1": {
      "main": [
        [
          {
            "node": "SSH3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SSH3": {
      "main": [
        [
          {
            "node": "SSH4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SSH4": {
      "main": [
        [
          {
            "node": "IF3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF1": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "SSH1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set": {
      "main": [
        [
          {
            "node": "IF1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code": {
      "main": [
        [
          {
            "node": "IF2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Spreadsheet File": {
      "main": [
        [
          {
            "node": "Send Email",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send Email": {
      "main": [
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF2": {
      "main": [
        [
          {
            "node": "Spreadsheet File",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No Operation, do nothing1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "firstFail": {
      "main": [
        [
          {
            "node": "IF",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "IF3": {
      "main": [
        [
          {
            "node": "SSH5",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Set",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SSH5": {
      "main": [
        [
          {
            "node": "Set",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook": {
      "main": [
        [
          {
            "node": "Postgres15",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Amend Expected Lines": {
      "main": [
        [
          {
            "node": "Postgres13",
            "type": "main",
            "index": 0
          },
          {
            "node": "Postgres12",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres13": {
      "main": [
        [
          {
            "node": "Set2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set2": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres12": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Set3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set3": {
      "main": [
        [
          {
            "node": "Postgres14",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres15": {
      "main": [
        [
          {
            "node": "globals",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "globals": {
      "main": [
        [
          {
            "node": "Postgres",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres": {
      "main": [
        [
          {
            "node": "Postgres1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres1": {
      "main": [
        [
          {
            "node": "SSH6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SSH6": {
      "main": [
        [
          {
            "node": "SSH7",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "SSH7": {
      "main": [
        [
          {
            "node": "firstFail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres2": {
      "main": [
        [
          {
            "node": "Postgres3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres3": {
      "main": [
        [
          {
            "node": "Postgres4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres4": {
      "main": [
        [
          {
            "node": "Postgres5",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres5": {
      "main": [
        [
          {
            "node": "Postgres6",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres6": {
      "main": [
        [
          {
            "node": "Postgres16",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set4": {
      "main": [
        [
          {
            "node": "Data Update: Process Alter Statements",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres16": {
      "main": [
        [
          {
            "node": "Postgres17",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres17": {
      "main": [
        [
          {
            "node": "Postgres18",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "No Operation, do nothing1": {
      "main": [
        [
          {
            "node": "Postgres2",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Data Update: Process Alter Statements": {
      "main": [
        [
          {
            "node": "Amend Expected Lines",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres18": {
      "main": [
        [
          {
            "node": "Set4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2023-12-04T10:38:50.407Z",
  "id": "UUGpezyZUVK5yOq6",
  "name": "Data Update: Silverfish: Prep",
  "nodes": [
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.stderr }}",
              "operation": "isNotEmpty"
            }
          ]
        }
      },
      "id": "5667900f-52b6-48ac-82b1-295cc989bd9e",
      "name": "IF",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        -360,
        680
      ]
    },
    {
      "parameters": {
        "fromEmail": "info@biketrax.co.uk",
        "toEmail": "shigeyoshi.kunimaru@silverfish-uk.com",
        "subject": "=Silverfish Feed Error - {{ ($('Code').all().length / $('globals').first().json.globals.LastCount) < 0.05 ? 100-((Math.round(($('Code').all().length / $('globals').first().json.globals.LastCount)*10000))/100) + \"% Parsed\" : \"Feed Rejected\" }}",
        "text": "=Line(s) from the latest Silverfish data feed have failed to parse. This is usually because of a break in CSV specifications or incorrect placement of standard delimiters (,) / enclosing marks (\")  in your feed CSV.\n\nHere is an example product code with faulty data, and the error it caused:\n\nProduct Code: {{ $('Code').first().json.failed_code }}\n{{ $('Code').first().json.stderr }}\n\nA list of errors is attached as a XLS file - this represents {{ ($('Code').all().length / $('globals').first().json.globals.LastCount) < 0.05 ? Math.round(($('Code').all().length / $('globals').first().json.globals.LastCount)*10000)/100 + \"% of your feed, so the remainder has been parsed\" : \"more than 5% of your feed, so the entire feed has been rejected\" }}. If you could correct the errors for future exports, then then the item(s) can be added to our database on the next run. Our data routines run daily, but this email will be sent a maximum of once a week, if you would prefer to recieve it more frequently (or as soon as errors emerge), please email luke@biketrax.co.uk.\n\nMany thanks,\n\nBiketraxBot (Product Information Database)",
        "options": {
          "attachments": "data",
          "ccEmail": "luke@biketrax.co.uk",
          "replyTo": "luke@biketrax.co.uk"
        }
      },
      "id": "707bde3e-c034-4817-9b46-fea0102a425e",
      "name": "Send Email",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2,
      "position": [
        1720,
        760
      ],
      "executeOnce": true,
      "credentials": {
        "smtp": {
          "id": "H2cITTqls0BiVgFE",
          "name": "info@biketrax.co.uk"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "command": "=grep -n {{ \"\\\"\"+$json.failed_code+\"\\\"\" }}  /home/luke/feeds/Upload-Silverfish{{ $runIndex == 0 ? \"\" : $runIndex }}.csv | cut -f1 -d:"
      },
      "id": "0fe78a98-f050-4376-9616-65c06a3b66ee",
      "name": "SSH1",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        -160,
        560
      ],
      "credentials": {
        "sshPassword": {
          "id": "AGAk5dnezH3Jdg8v",
          "name": "Node3 (postgres)"
        }
      }
    },
    {
      "parameters": {
        "command": "={{\"sed '\"+$json.stdout.split(\"\\n\")[0]+\"d'\"}} /home/luke/feeds/Upload-Silverfish{{ $runIndex == 0 ? \"\" : $runIndex }}.csv > /home/luke/feeds/Upload-Silverfish{{ $runIndex+1 }}.csv"
      },
      "id": "3b4cea8c-217c-4467-a8ce-f57dae634ca3",
      "name": "SSH3",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        60,
        560
      ],
      "credentials": {
        "sshPassword": {
          "id": "BS6BQiriQnV3fLKC",
          "name": "node3 (luke)"
        }
      }
    },
    {
      "parameters": {
        "command": "=psql -d odooData -c \"\\\\COPY odoodata.upload_silverfish FROM /home/luke/feeds/Upload-Silverfish{{ $runIndex+1 }}.csv DELIMITER ',' CSV HEADER;\"",
        "cwd": "/home/luke/feeds/"
      },
      "id": "ced231a6-69a6-4f2b-93e4-81dafd468089",
      "name": "SSH4",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        260,
        560
      ],
      "credentials": {
        "sshPassword": {
          "id": "AGAk5dnezH3Jdg8v",
          "name": "Node3 (postgres)"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "string": [
            {
              "value1": "={{ $json.stderr }}",
              "operation": "isEmpty"
            }
          ],
          "number": [
            {
              "value1": "={{ $runIndex }}",
              "operation": "largerEqual",
              "value2": "={{ Number($('globals').first().json.globals.LastCount)*0.05 }}"
            }
          ]
        },
        "combineOperation": "any"
      },
      "id": "34118102-9089-4f18-8cf1-092e49b3343a",
      "name": "IF1",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        640,
        300
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "failed_code",
              "value": "={{$('SSH4').item.json.stderr.split(\"\\\"\")[2] == \" of relation \" ? $('SSH4').item.json.stderr.split(\"(\")[1].split(\",\")[0] : $('SSH4').item.json.stderr.split(\"\\\"\")[2] }}"
            },
            {
              "name": "stderr",
              "value": "={{ $('SSH4').item.json.stderr }}"
            }
          ]
        },
        "options": {}
      },
      "id": "5390b77a-51d3-4bdd-9980-d5d5e52d5aa3",
      "name": "Set",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        460,
        560
      ]
    },
    {
      "parameters": {
        "jsCode": "let results = [],\n  i = 0;\n\ndo {\n  try {\n    results = results.concat($(\"Set\").all(0, i));\n  } catch (error) {\n        results = results.concat($(\"firstFail\").all()); \n    return results;\n  }\n  i++;\n} while (true);\n"
      },
      "id": "95c9e665-c828-49ab-bdb2-cb2f108204bd",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        880,
        760
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "operation": "toFile",
        "options": {
          "fileName": "parsing_errors.xls",
          "headerRow": true
        }
      },
      "id": "c17173ad-8c2e-46d5-8bbe-7ea0e7d72ada",
      "name": "Spreadsheet File",
      "type": "n8n-nodes-base.spreadsheetFile",
      "typeVersion": 1,
      "position": [
        1540,
        760
      ],
      "executeOnce": false
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $today.weekday }}",
              "operation": "equal",
              "value2": 1
            }
          ]
        }
      },
      "id": "111140a4-03c6-4b2c-a160-36df86256c0a",
      "name": "IF2",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        1100,
        760
      ]
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "failed_code",
              "value": "={{$json.stderr.split(\"\\\"\")[2] == \" of relation \" ? $json.stderr.split(\"(\")[1].split(\",\")[0] : $json.stderr.split(\"\\\"\")[2] }}"
            },
            {
              "name": "stderr",
              "value": "={{ $json.stderr }}"
            }
          ]
        },
        "options": {}
      },
      "id": "55356086-0aa5-4b6c-9381-7ff78b7f74d5",
      "name": "firstFail",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        -580,
        680
      ]
    },
    {
      "parameters": {
        "conditions": {
          "number": [
            {
              "value1": "={{ $runIndex }}",
              "operation": "larger"
            }
          ]
        },
        "combineOperation": "any"
      },
      "id": "58ff8907-daa1-4c5b-8301-a7042e6f19a5",
      "name": "IF3",
      "type": "n8n-nodes-base.if",
      "typeVersion": 1,
      "position": [
        60,
        780
      ]
    },
    {
      "parameters": {
        "command": "=rm /home/luke/feeds/Upload-Silverfish{{ $runIndex }}.csv",
        "cwd": "/home/luke/feeds/"
      },
      "id": "fa293cc5-44dc-4d76-a6a7-abf921b51a83",
      "name": "SSH5",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        260,
        780
      ],
      "credentials": {
        "sshPassword": {
          "id": "BS6BQiriQnV3fLKC",
          "name": "node3 (luke)"
        }
      }
    },
    {
      "parameters": {
        "path": "silverfish-prep",
        "responseMode": "lastNode",
        "options": {}
      },
      "id": "7102855c-4ad5-48a4-94e7-bba9c003f36f",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [
        -1820,
        680
      ],
      "webhookId": "16eee579-81a0-4f1b-bbc1-df3488368d92"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT COUNT (productcode) FROM upload_silverfish;",
        "options": {}
      },
      "id": "67c83dee-13cf-4e34-a11b-45eaa309c899",
      "name": "Postgres12",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        -280,
        1580
      ],
      "credentials": {
        "postgres": {
          "id": "dqel3RyoT6NsGiSw",
          "name": "odooData"
        }
      }
    },
    {
      "parameters": {},
      "id": "7928c010-e365-479f-af87-35425e787226",
      "name": "Amend Expected Lines",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -680,
        1480
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT * FROM odoodata.map_supplierinfo WHERE Name = 'Silverfish';",
        "options": {}
      },
      "id": "5ba2d4be-3830-46bc-aaab-bd197e036e1c",
      "name": "Postgres13",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        -500,
        1360
      ],
      "credentials": {
        "postgres": {
          "id": "dqel3RyoT6NsGiSw",
          "name": "odooData"
        }
      }
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "globals",
              "value": "={{ JSON.parse($json.globals)[0] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "31b1aba8-bf22-4e1d-9fa7-2f1993e448ee",
      "name": "Set2",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        -280,
        1360
      ]
    },
    {
      "parameters": {
        "mode": "combine",
        "combinationMode": "mergeByPosition",
        "options": {}
      },
      "id": "4557c8a8-d8ca-4b2a-8125-de9ad181c25f",
      "name": "Merge1",
      "type": "n8n-nodes-base.merge",
      "typeVersion": 2.1,
      "position": [
        -60,
        1480
      ]
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "globals.LastCount",
              "value": "={{ $json.count }}"
            }
          ]
        },
        "options": {}
      },
      "id": "859b101d-a503-4bf9-9d86-316e090eb132",
      "name": "Set3",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        160,
        1480
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE map_supplierinfo SET globals = {{ \"'[\" + JSON.stringify($json.globals) + \"]'\" }} WHERE \"name\" = {{ \"'\"+$json.name+\"'\" }}; ",
        "options": {}
      },
      "id": "f76dc817-948a-4776-8196-f3dde4a012e7",
      "name": "Postgres14",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        380,
        1480
      ],
      "credentials": {
        "postgres": {
          "id": "dqel3RyoT6NsGiSw",
          "name": "odooData"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT * FROM odoodata.map_supplierinfo WHERE Name = 'Silverfish';",
        "options": {}
      },
      "id": "4fe2c3fc-3c8d-47cb-8ee7-6e0970387e68",
      "name": "Postgres15",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        -1840,
        420
      ],
      "credentials": {
        "postgres": {
          "id": "dqel3RyoT6NsGiSw",
          "name": "odooData"
        }
      }
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "globals",
              "value": "={{ JSON.parse($json.globals)[0] }}"
            }
          ]
        },
        "options": {}
      },
      "id": "ac54a71d-c228-4e29-907d-ba1edcf6b8ee",
      "name": "globals",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        -1680,
        420
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "DROP TABLE IF EXISTS odoodata.upload_silverfish",
        "options": {}
      },
      "id": "a9f86320-a7e8-4fe7-865c-b996715366a6",
      "name": "Postgres",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.1,
      "position": [
        -1480,
        420
      ],
      "credentials": {
        "postgres": {
          "id": "dqel3RyoT6NsGiSw",
          "name": "odooData"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "CREATE TABLE odoodata.upload_silverfish (like template_silverfish INCLUDING CONSTRAINTS);",
        "options": {}
      },
      "id": "89b327bb-05ec-4b7f-b3c5-706df5d61099",
      "name": "Postgres1",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.1,
      "position": [
        -660,
        420
      ],
      "credentials": {
        "postgres": {
          "id": "dqel3RyoT6NsGiSw",
          "name": "odooData"
        }
      }
    },
    {
      "parameters": {
        "command": "=LANG=C sed -i 's/[\\d128-\\d255]//g' /home/luke/feeds/Upload-Silverfish.csv",
        "cwd": "/home/luke/feeds/"
      },
      "id": "25aca91f-0b3f-4678-9211-4a43eb6d359d",
      "name": "SSH6",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        -1480,
        660
      ],
      "credentials": {
        "sshPassword": {
          "id": "BS6BQiriQnV3fLKC",
          "name": "node3 (luke)"
        }
      }
    },
    {
      "parameters": {
        "command": "=psql -d odooData -c \"\\\\COPY odoodata.upload_silverfish FROM /home/luke/feeds/Upload-Silverfish.csv DELIMITER ',' CSV HEADER;\"",
        "cwd": "/home/luke/feeds/"
      },
      "id": "5ee0234b-cde0-475b-95d6-94d6f50f24aa",
      "name": "SSH7",
      "type": "n8n-nodes-base.ssh",
      "typeVersion": 1,
      "position": [
        -1240,
        660
      ],
      "credentials": {
        "sshPassword": {
          "id": "AGAk5dnezH3Jdg8v",
          "name": "Node3 (postgres)"
        }
      }
    },
    {
      "parameters": {},
      "id": "e6533d35-62f4-4d4b-af81-4ecbf01f7888",
      "name": "No Operation, do nothing1",
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        -1840,
        1060
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "DELETE FROM upload_silverfish WHERE \"Unit Cost\" = 'N/A';",
        "options": {}
      },
      "id": "af88b8d2-63ed-404a-a27e-15f6b465bbfd",
      "name": "Postgres2",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        -1620,
        1060
      ],
      "credentials": {
        "postgres": {
          "id": "dqel3RyoT6NsGiSw",
          "name": "odooData"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE upload_silverfish \nSET \"Stock Count\" = 1 \nWHERE\n\"Stock Count\"::NUMERIC > 0;\n  ",
        "options": {}
      },
      "id": "1a7548c0-05ce-4356-a441-e1292b31415f",
      "name": "Postgres3",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        -1400,
        1060
      ],
      "credentials": {
        "postgres": {
          "id": "dqel3RyoT6NsGiSw",
          "name": "odooData"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "UPDATE upload_silverfish \nSET \"Stock Count\" = 0 \nWHERE\n\"Stock Count\"::NUMERIC < 0;\n  ",
        "options": {}
      },
      "id": "5f955b02-72cf-4cc9-92c8-b473c9c097e3",
      "name": "Postgres4",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        -1180,
        1060
      ],
      "credentials": {
        "postgres": {
          "id": "dqel3RyoT6NsGiSw",
          "name": "odooData"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "DELETE FROM upload_silverfish WHERE \"Unit Cost\" = 'N/A';",
        "options": {}
      },
      "id": "8ebaa78c-db8b-4d10-9551-b6f1aa08fcbd",
      "name": "Postgres5",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        -1620,
        1260
      ],
      "credentials": {
        "postgres": {
          "id": "dqel3RyoT6NsGiSw",
          "name": "odooData"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "DELETE FROM upload_silverfish WHERE \"Unit MSRP\" = 'N/A';",
        "options": {}
      },
      "id": "1f334a83-25be-47c2-91d0-e84955c5ac96",
      "name": "Postgres6",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        -1400,
        1260
      ],
      "credentials": {
        "postgres": {
          "id": "dqel3RyoT6NsGiSw",
          "name": "odooData"
        }
      }
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "alterStatements",
              "value": "RENAME COLUMN \"Vendor SKU\" TO \"ProductCode\", ALTER COLUMN \"ProductCode\" TYPE CHAR(40), RENAME COLUMN \"Product Name\" TO \"ProductName\", ALTER COLUMN \"ProductName\" TYPE CHAR(235), RENAME COLUMN \"UPC/EAN\" TO \"Ean\", ALTER COLUMN \"Ean\" TYPE CHAR(22), RENAME COLUMN \"Unit MSRP\" TO \"Rrp\", ALTER COLUMN \"Rrp\" TYPE DECIMAL(7,2) USING \"Rrp\"::NUMERIC, RENAME COLUMN \"Pack Qty\" TO \"PackQty\", ALTER COLUMN \"PackQty\" TYPE CHAR(27), RENAME COLUMN \"Variant Grouping\" TO \"VariantGrouping\", ALTER COLUMN \"VariantGrouping\" TYPE CHAR(30), RENAME COLUMN \"Short Description\" TO \"ShortDescription\", ALTER COLUMN \"ShortDescription\" TYPE CHAR(222), RENAME COLUMN \"Long Description\" TO \"LongDescription\", ALTER COLUMN \"LongDescription\" TYPE TEXT, RENAME COLUMN \"Unit Cost\" TO \"YourPrice\", ALTER COLUMN \"YourPrice\" TYPE DECIMAL(7,2) USING \"YourPrice\"::NUMERIC, RENAME COLUMN \"Lead Time\" TO \"LeadTime\", ALTER COLUMN \"LeadTime\" TYPE SMALLINT USING \"LeadTime\"::NUMERIC, RENAME COLUMN \"Sub Category\" TO \"SubCategory\", ALTER COLUMN \"SubCategory\" TYPE CHAR(30), RENAME COLUMN \"image\" TO \"ImageUrl\", ALTER COLUMN \"ImageUrl\" TYPE CHAR(102), RENAME COLUMN \"Alternative Image 1\" TO \"AlternativeImage1Url\", ALTER COLUMN \"AlternativeImage1Url\" TYPE CHAR(102), RENAME COLUMN \"Alternative Image 2\" TO \"AlternativeImage2Url\", ALTER COLUMN \"AlternativeImage2Url\" TYPE CHAR(102), RENAME COLUMN \"Alternative Image 3\" TO \"AlternativeImage3Url\", ALTER COLUMN \"AlternativeImage3Url\" TYPE CHAR(102), RENAME COLUMN \"Stock Count\" TO \"StockCount\", ALTER COLUMN \"StockCount\" TYPE SMALLINT USING \"StockCount\"::NUMERIC, RENAME COLUMN \"Technical Spec\" TO \"TechnicalSpec\", ALTER COLUMN \"TechnicalSpec\" TYPE TEXT, ADD COLUMN \"TechnicalSpecLabel\" TEXT DEFAULT NULL, ALTER COLUMN \"vat\" TYPE SMALLINT USING \"vat\"::NUMERIC"
            },
            {
              "name": "supplier",
              "value": "Silverfish"
            }
          ]
        },
        "options": {}
      },
      "id": "a560ba4f-56dc-4171-afb0-8a9633c7b46b",
      "name": "Set4",
      "type": "n8n-nodes-base.set",
      "typeVersion": 2,
      "position": [
        -1620,
        1460
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "DELETE FROM upload_silverfish WHERE \"Unit MSRP\" = '#N/A';",
        "options": {}
      },
      "id": "a8e7cb18-df55-44fb-99c5-6b4a1876d2ae",
      "name": "Postgres16",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        -1180,
        1260
      ],
      "credentials": {
        "postgres": {
          "id": "dqel3RyoT6NsGiSw",
          "name": "odooData"
        }
      }
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "DELETE FROM upload_silverfish WHERE \"Unit Cost\" = '#N/A';",
        "options": {}
      },
      "id": "798bcbfb-76a9-40fd-9170-007f7ae82bfd",
      "name": "Postgres17",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        -1000,
        1260
      ],
      "credentials": {
        "postgres": {
          "id": "dqel3RyoT6NsGiSw",
          "name": "odooData"
        }
      }
    },
    {
      "parameters": {
        "workflowId": "Vc6ZgR8vArPNZu09"
      },
      "id": "5047e384-2bb0-4e1e-beee-fde5ec1d4740",
      "name": "Data Update: Process Alter Statements",
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1,
      "position": [
        -1400,
        1460
      ]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "DELETE FROM upload_silverfish WHERE \"UPC/EAN\" IS NULL;",
        "options": {}
      },
      "id": "ab86ef4c-8171-4288-9446-d96dd706e914",
      "name": "Postgres18",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.2,
      "position": [
        -820,
        1260
      ],
      "credentials": {
        "postgres": {
          "id": "dqel3RyoT6NsGiSw",
          "name": "odooData"
        }
      }
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1",
    "saveDataSuccessExecution": "none",
    "saveManualExecutions": true,
    "callerPolicy": "workflowsFromSameOwner"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2023-08-08T15:46:20.698Z",
      "updatedAt": "2023-08-08T15:46:20.698Z",
      "id": "4S5wvtegUIvgvqYs",
      "name": "PostgreSQL"
    },
    {
      "createdAt": "2023-08-10T09:20:24.007Z",
      "updatedAt": "2023-08-10T09:20:24.007Z",
      "id": "HV0Z3uOvnzoAoe20",
      "name": "Spreadsheet"
    },
    {
      "createdAt": "2023-08-08T15:13:33.587Z",
      "updatedAt": "2023-08-08T15:13:33.587Z",
      "id": "bbI8zuoQ3XV0LUP0",
      "name": "set"
    },
    {
      "createdAt": "2023-08-10T09:20:30.275Z",
      "updatedAt": "2023-08-10T09:20:30.275Z",
      "id": "cDsMu9S1EDCMPUY2",
      "name": "email"
    },
    {
      "createdAt": "2023-08-10T09:20:13.241Z",
      "updatedAt": "2023-08-10T09:20:13.241Z",
      "id": "gpFnWqOy05McH1n2",
      "name": "SSH"
    }
  ],
  "triggerCount": 1,
  "updatedAt": "2023-12-04T13:14:58.000Z",
  "versionId": "577a85fa-7aad-49a5-a9f6-c6b3e6e9bd69"
}